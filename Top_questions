// question 1 
import java.util.*;
class Main 
{
    public static class Earthquake
    {
        String name  ;
        int scale ;
        public Earthquake(String name , int scale)
        {
            this.name  = name ;
            this.scale  = scale ;
        }
        public void print(String name , int scale)
        {
            System.out.println("The name of the earthquake "+this.name) ;
            System.out.println("The scale is "+this.scale) ;
        }   
    }
    public static void main(String[] agrs)
    {
        Scanner sc  = new Scanner(System.in) ;
        String n  = sc.next() ;
        int r  = sc.nextInt() ;
        if(r<=8 && r>=2)
        {
            try
            {
                Earthquake e = new Earthquake(n, r) ;
                e.print(n,r) ;
            }
            catch(NumberFormatException e )
            {
                throw new NumberFormatException("Please enter a valid number next time") ;
            }
        }
        else 
        {
            System.out.println("Please enter a valid number next time") ;
        }
    }
}
// solution to problem 2 
import java.util.*;
class Main
{
    public static class Circle
    {
        int x ;
        int y  ;
        int radius ;
        public Circle(int x  , int y , int z)
        {
            this.x  =x ;
            this.y  = y ;
            this.radius  = radius ;
        }
        public void area()
        {
            double ar  = 3.14*(radius*radius) ;
            System.out.println("area "+ar) ;
        }
    }
    public static class Triangle
    {
        int x ; 
        int y ; 
        int x1 ;
        int y1 ;
        int x2 ;
        int y2 ;
        public Triangle(int x , int y , int x1 , int y1 , int x2 , int y2 )
        {
            this.x = x ;
            this.y = y ; 
            this.x1 = x1 ;
            this.y1 = y1 ; 
            this.x2 = x2 ;
            this.y2= y2 ; 

        }
        public void  area()
        {
            int a  = (int)Math.sqrt((x-x1)*(x-x1) + (y-y1)*(y-y1)) ;
            int b  = (int)Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2)  ) ;
            int c  = (int)Math.sqrt((x2-x)*(x2-x) + (y2-y)*(y2-y)) ;
            int sum  = (a+b+c)/2  ;
            int ar  = (int)Math.sqrt(sum*(sum-a)*(sum-b)*(sum-c)) ;
            System.out.println(ar) ;

        }
    }
    public static class Quad
    {
        int x ;
        int y ;
        int x1 ;
        int y1 ;
        int x2 ;
        int y2 ;
        int x3 ;
        int y3 ;
        public Quad(int x , int y ,int x1 , int y1 ,int x2 , int y2 ,int x3 , int y3)
        {
            this.x = x ;
            this.y = y ;
            this.x1 = x1 ;
            this.y1 = y1 ;
            this.x2 = x2 ;
            this.y2 = y2 ;
            this.x3 = x3 ;
            this.y3 = y3 ;
        }
        public void area()
        {
            double  a  = (double)Math.sqrt((x-x1)*(x-x1) + (y-y1)*(y-y1)) ;
            double b  = (double)Math.sqrt((x1-x3)*(x1-x3) + (y1-y3)*(y1-y3)  ) ;
            double c  = (double)Math.sqrt((x3-x)*(x3-x) + (y3-y)*(y3-y)) ;
            double sum  = (a+b+c)/2  ;
            double ar  = (double)Math.sqrt(sum*(sum-a)*(sum-b)*(sum-c)) ;
            //System.out.println(ar) ;

            double l  = (double)Math.sqrt((x2-x1)*(x2-x1) + (y2-y1)*(y2-y1)) ;
            double m  = (double)Math.sqrt((x3-x2)*(x3-x2) + (y3-y2)*(y3-y2)) ;
            double n  = (double)Math.sqrt((x1-x3)*(x1-x3) + (y1-y3)*(y1-y3)) ;
            double sum2  = (l+m+n)/2  ;
            double arr  = (double)Math.sqrt(sum2*(sum2-l)*(sum2-m)*(sum2-n)) ;
            //System.out.println(ar) ;
            System.out.println(arr+ar) ;


        }
    }
    public static void main(String args[])
    {
        Quad q  = new Quad(0,0,1,0,1,1,0,1) ;
        q.area() ;
    }
}
// set2 
// question 1 
import java.util.*;
class Main 
{
    public static class vector
    {
        int x ;
        int y ;
        int z  ;
        int x1 ;
        int y1 ;
        int z1  ;
        public vector(int x , int y , int z , int x1 , int y1  , int z1)
        {
            this.x = x ;
            this.y  = y  ;
            this.z  = z  ;
            this.x1 = x1 ;
            this.y1  = y1  ;
            this.z1  = z1  ;
        }
        public void add()
        {
            int xt  = x+x1 ;
            int yt = y+y1 ;
            int zt = z+z1 ;
            System.out.println(xt+"i "+yt+"j "+zt+"k") ;
        }
        public void dot()
        {
            int sum = x*x1 + y*y1+ z*z1 ;
            System.out.println("dot is "+sum) ;
        }
        public void cross()
        {
            int xres  = y*z1  - z*y1  ;
            int yres  = (x*z1 - z*x1)*(-1)  ;
            int zres   = x*y1 - y*x1 ;
            System.out.println(xres+" i "+ yres+" j" + zres +" k") ;
        }
    }
    public static void main(String args[])
    {
        vector v  = new vector(1,2,3,2,3,4) ;
        v.dot() ;
        v.cross() ;
        v.add() ;
    }
}
// set 2 question 2 
import java.util.*;
class Main 
{
    public static class Fraction 
    {
        int a  ; 
        int b  ;
        int c  ;
        int d  ;
        public Fraction(int a  , int b , int c , int d )
        {
            this.a  = a  ;
            this.b  = b ;
            this.c  = c  ;
            this.d   = d  ;

        }
        public void add()
        {
            float s = (float)a/b  ;
            float dz  = (float)c/d  ;
            System.out.println(s+dz) ;
        }
        public void multiply()
        {
            int s  = a*c  ;
            int z  = b*d  ;
            float  res  = (float)s/z  ;
            System.out.println(res) ;

        }
        public void printer(int a , int b )
        {
            System.out.println("The fraction is in the form : "+a+"/"
            +b) ;
        }
        public void gcdcounter()
        {
            // void
        }
    }
    public static abstract class Complex
    {
        int a ;
        int b  ;
        public Complex(int a , int b )
        {
            this.a  = a ;
            this.b  = b; 

        }
    }
    public static class ComplexFraction extends Fraction
    {
        public ComplexFraction(int a , int b , int c, int d )
        {
            super(a,b,c,d) ;
        }
        @Override
        public void add()
        {
            int res  = a+c  ; 
            int res3  = b+d   ;
            System.out.println(res+" i"+res3 ) ;
        }
        @Override
        public void multiply()
        {
            int res  = a*c ;
            int rs = b*d*(-1) ;
            int rsx  = a*b ;
            int rsy   = a*d ;
            int result  = res + rs  ;
            int  ycome  = rsx + rsy ;
            System.out.println("The result is "+result +" i"+ycome) ;

        }
        public void argument(int a , int b)
        {
            int d  = b/a  ;
            double result  = Math.atan(d) ;
            System.out.println(result) ;
        } 
        public void magnitude(int a , int b)
        {
            double x  = Math.sqrt(a*a + b*b) ;
            System.out.println(x) ;
        }

    }
    public static class ComplexInt extends Fraction
    {
        public ComplexInt(int a , int b , int c, int d )
        {
            super(a,b,c,d) ;
        }
        @Override
        public void add()
        {
            int res  = a+c  ; 
            int res3  = b+d   ;
            System.out.println(res+" i"+res3 ) ;
        }
        @Override
        public void multiply()
        {
            int res  = a*c ;
            int rs = b*d*(-1) ;
            int rsx  = a*b ;
            int rsy   = a*d ;
            int result  = res + rs  ;
            int  ycome  = rsx + rsy ;
            System.out.println("The result is "+result +" i"+ycome) ;

        }
        public void argument(int a , int b)
        {
            int d  = b/a  ;
            int result  = (int)Math.atan(d) ;
            System.out.println(result) ;
        } 
        public void magnitude(int a , int b)
        {
            double x  = (int)Math.sqrt(a*a + b*b) ;
            System.out.println(x) ;
        }
    }
    public static void main(String args[]) throws IllegalFormatException
    {
        try
        {
            ComplexFraction c  = new ComplexFraction(1,0,2,0);
            c.add() ;
            c.multiply() ;
            c.argument(1,2) ;
            c.magnitude(2,1) ;
            ComplexInt num   = new ComplexInt(1,2,2,1) ;
            num.add() ;
            num.multiply() ;
            num.argument(1,2);

        }
        catch(IllegalFormatException e)
        {
            System.out.println("The number is zero please check once") ;
        }
        finally
        {
            System.out.println("This is where the code ends") ;
        }
    }
}
// set3 A 
import java.util.*;
class Main 
{
    public static class student
    {
        int roll  ;
        String name  ;
        String profname ;
        public student(String name , int roll)
        {
            this.name  = name ;
            this.roll  = roll; 
        }
        public String getprofname()
        {
            return profname ;
        }
        public void setProf(String profname)
        {
            this.profname = profname ;
        }
    }
    public static class prof
    {
        int experience   ;
        String name  ;
        public prof(int experience ,  String name)
        {
            this.experience = experience  ;
            this.name  = name ;
        }
    }
    public static class Course
    {
        student s ;
        student s1 ;
        prof p  ;
        public Course(student s  , student s1 , prof p)
        {
          this.s = s  ;
          this.s1 =s1 ; 
          this.p =  p ;
        } 
        public void displaystudent()
        {
            System.out.println(" name "+s.name) ;
            System.out.println(" name "+s1.name) ;
        }
        public void disprof()
        {
            System.out.println(p.name) ;
        }
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in) ;
        String n  = sc.next() ;
        int rol1  = sc.nextInt() ;
        String name1 = sc.next() ;
        int rol2 = sc.nextInt() ;
        String name2  = sc.next() ;
        prof p  = new prof(7,n) ;
        student s1  = new student("Rohan" ,1) ;
        student s2  = new student("rohit" , 2) ;
        s1.setProf(n) ;
        s2.setProf(n) ;
        Course c  = new Course(s1,s2,p) ;
        c.displaystudent() ;
        c.disprof() ;
    }
}
